package model.entity;

import model.services.AppModuleImpl;

import model.views.seq_BpoIdVORowImpl;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;
import oracle.adf.model.binding.DCDataControl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 12 15:04:57 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxOmBpoInfoTEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

   
    

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BpoId {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getBpoId();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setBpoId((Number)value);
            }
        }
        ,
        FobId {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getFobId();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setFobId((Number)value);
            }
        }
        ,
        Bpo {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getBpo();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setBpo((String)value);
            }
        }
        ,
        Qty {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getQty();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setQty((Number)value);
            }
        }
        ,
        Shipdate {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getShipdate();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setShipdate((Date)value);
            }
        }
        ,
        Classification {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getClassification();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setClassification((String)value);
            }
        }
        ,
        PoType {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getPoType();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setPoType((String)value);
            }
        }
        ,
        Parent {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getParent();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setParent((Number)value);
            }
        }
        ,
        Status {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getStatus();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setStatus((Number)value);
            }
        }
        ,
        Incoterms {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getIncoterms();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setIncoterms((String)value);
            }
        }
        ,
        Enddate {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getEnddate();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setEnddate((Date)value);
            }
        }
        ,
        Shipmode {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getShipmode();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setShipmode((String)value);
            }
        }
        ,
        Country {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getCountry();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        XxOmSizewiseLTEO {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getXxOmSizewiseLTEO();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setXxOmSizewiseLTEO((EntityImpl)value);
            }
        }
        ,
        seq_BpoIdVO1 {
            public Object get(XxOmBpoInfoTEOImpl obj) {
                return obj.getseq_BpoIdVO1();
            }

            public void put(XxOmBpoInfoTEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XxOmBpoInfoTEOImpl object);

        public abstract void put(XxOmBpoInfoTEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BPOID = AttributesEnum.BpoId.index();
    public static final int FOBID = AttributesEnum.FobId.index();
    public static final int BPO = AttributesEnum.Bpo.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int SHIPDATE = AttributesEnum.Shipdate.index();
    public static final int CLASSIFICATION = AttributesEnum.Classification.index();
    public static final int POTYPE = AttributesEnum.PoType.index();
    public static final int PARENT = AttributesEnum.Parent.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int INCOTERMS = AttributesEnum.Incoterms.index();
    public static final int ENDDATE = AttributesEnum.Enddate.index();
    public static final int SHIPMODE = AttributesEnum.Shipmode.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int XXOMSIZEWISELTEO = AttributesEnum.XxOmSizewiseLTEO.index();
    public static final int SEQ_BPOIDVO1 = AttributesEnum.seq_BpoIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxOmBpoInfoTEOImpl() {
    }
///appmodule class


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.XxOmBpoInfoTEO");
        }
        return mDefinitionObject;
    }

    public ApplicationModule getAppM() {
        DCBindingContainer bindingContainer =
            (DCBindingContainer)BindingContext.getCurrent().getCurrentBindingsEntry();
        //BindingContext bindingContext = BindingContext.getCurrent();
        DCDataControl dc =
            bindingContainer.findDataControl("AppModuleDataControl"); // Name of application module in datacontrolBinding.cpx
        AppModuleImpl appM = (AppModuleImpl)dc.getDataProvider();
        return appM;
    }
    AppModuleImpl appM = (AppModuleImpl)this.getAppM();


    /**
     * Gets the attribute value for BpoId, using the alias name BpoId.
     * @return the BpoId
     */
    public Number getBpoId() {
        return (Number)getAttributeInternal(BPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoId.
     * @param value value to set the BpoId
     */
    public void setBpoId(Number value) {
        setAttributeInternal(BPOID, value);
    }

    /**
     * Gets the attribute value for FobId, using the alias name FobId.
     * @return the FobId
     */
    public Number getFobId() {
        return (Number)getAttributeInternal(FOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FobId.
     * @param value value to set the FobId
     */
    public void setFobId(Number value) {
        setAttributeInternal(FOBID, value);
    }

    /**
     * Gets the attribute value for Bpo, using the alias name Bpo.
     * @return the Bpo
     */
    public String getBpo() {
        return (String)getAttributeInternal(BPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bpo.
     * @param value value to set the Bpo
     */
    public void setBpo(String value) {
        setAttributeInternal(BPO, value);
    }

    /**
     * Gets the attribute value for Qty, using the alias name Qty.
     * @return the Qty
     */
    public Number getQty() {
        return (Number)getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qty.
     * @param value value to set the Qty
     */
    public void setQty(Number value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for Shipdate, using the alias name Shipdate.
     * @return the Shipdate
     */
    public Date getShipdate() {
        return (Date)getAttributeInternal(SHIPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shipdate.
     * @param value value to set the Shipdate
     */
    public void setShipdate(Date value) {
        setAttributeInternal(SHIPDATE, value);
    }

    /**
     * Gets the attribute value for Classification, using the alias name Classification.
     * @return the Classification
     */
    public String getClassification() {
        
        return (String)getAttributeInternal(CLASSIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Classification.
     * @param value value to set the Classification
     */
    public void setClassification(String value) {
        setAttributeInternal(CLASSIFICATION, value);
    }

    /**
     * Gets the attribute value for PoType, using the alias name PoType.
     * @return the PoType
     */
    public String getPoType() {
        return (String)getAttributeInternal(POTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoType.
     * @param value value to set the PoType
     */
    public void setPoType(String value) {
        setAttributeInternal(POTYPE, value);
    }

    /**
     * Gets the attribute value for Parent, using the alias name Parent.
     * @return the Parent
     */
    public Number getParent() {
        return (Number)getAttributeInternal(PARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Parent.
     * @param value value to set the Parent
     */
    public void setParent(Number value) {
        setAttributeInternal(PARENT, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public Number getStatus() {
        return (Number)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(Number value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Incoterms, using the alias name Incoterms.
     * @return the Incoterms
     */
    public String getIncoterms() {
        return (String)getAttributeInternal(INCOTERMS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Incoterms.
     * @param value value to set the Incoterms
     */
    public void setIncoterms(String value) {
        setAttributeInternal(INCOTERMS, value);
    }

    /**
     * Gets the attribute value for Enddate, using the alias name Enddate.
     * @return the Enddate
     */
    public Date getEnddate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Enddate.
     * @param value value to set the Enddate
     */
    public void setEnddate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for Shipmode, using the alias name Shipmode.
     * @return the Shipmode
     */
    public String getShipmode() {
        return (String)getAttributeInternal(SHIPMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shipmode.
     * @param value value to set the Shipmode
     */
    public void setShipmode(String value) {
        setAttributeInternal(SHIPMODE, value);
    }

    /**
     * Gets the attribute value for Country, using the alias name Country.
     * @return the Country
     */
    public String getCountry() {
        return (String)getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Country.
     * @param value value to set the Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getXxOmSizewiseLTEO() {
        return (EntityImpl)getAttributeInternal(XXOMSIZEWISELTEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setXxOmSizewiseLTEO(EntityImpl value) {
        setAttributeInternal(XXOMSIZEWISELTEO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> seq_BpoIdVO1.
     */
    public RowSet getseq_BpoIdVO1() {
        return (RowSet)getAttributeInternal(SEQ_BPOIDVO1);
    }


    /**
     * @param bpoId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number bpoId) {
        return new Key(new Object[]{bpoId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        try {
                   super.create(attributeList);
                   oracle.jbo.server.SequenceImpl s =
                       new oracle.jbo.server.SequenceImpl("XX_OM_BPO_INFO_T_SEQ",
                                                          getDBTransaction());
                   oracle.jbo.domain.Number sVal = s.getSequenceNumber();
                   setBpoId(sVal);
                   System.out.println("Recently Created bpo Id: " + sVal);
                  
               } catch (Exception e) {
                   e.printStackTrace();
               }
       
        
        /*ViewObject vo=appM.getXxOmBpoInfoTVO1();
        RowSet r=(RowSet)getseq_BpoIdVO1() ;
        seq_BpoIdVORowImpl v=(seq_BpoIdVORowImpl)r.next();
        Number Next=v.getSeqNo();
        this.setBpoId(Next);
        appM.getDBTransaction().commit();
        vo.executeQuery();*/
    }// end of create

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
